.form-control-lightYellow {
    display: block;
    width: 100%;
    padding: $input-padding-y $input-padding-x;
    font-family: $input-font-family;
    @include font-size($input-font-size);
    font-weight: $input-font-weight;
    line-height: $input-line-height;
    color: $input-color;
    // background-color: $input-bg;
    background-color: $select;
    background-clip: padding-box;
    border: $input-border-width solid $input-border-color;
    appearance: none; // Fix appearance for date inputs in Safari
  
    // Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
    @include border-radius($input-border-radius, 0);
  
    @include box-shadow($input-box-shadow);
    @include transition($input-transition);
  
    &[type="file"] {
      overflow: hidden; // prevent pseudo element button overlap
  
      &:not(:disabled):not(:read-only) {
        cursor: pointer;
      }
    }
  
    // Customize the `:focus` state to imitate native WebKit styles.
    &:focus {
      color: $input-focus-color;
      background-color: $input-focus-bg;
      // background-color: $primary;
      border-color: $input-focus-border-color;
      outline: 0;
      @if $enable-shadows {
        @include box-shadow($input-box-shadow, $input-focus-box-shadow);
      } @else {
        // Avoid using mixin so we can pass custom focus shadow properly
        box-shadow: $input-focus-box-shadow;
      }
    }
  
    // Add some height to date inputs on iOS
    // https://github.com/twbs/bootstrap/issues/23307
    // TODO: we can remove this workaround once https://bugs.webkit.org/show_bug.cgi?id=198959 is resolved
    &::-webkit-date-and-time-value {
      // Multiply line-height by 1em if it has no unit
      height: if(unit($input-line-height) == "", $input-line-height * 1em, $input-line-height);
    }
  
    // Placeholder
    &::placeholder {
      color: $input-placeholder-color;
      // color: $danger;
      // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
      opacity: 1;
      font-weight: $font-weight-light;
    }
  
    // Disabled and read-only inputs
    //
    // HTML5 says that controls under a fieldset > legend:first-child won't be
    // disabled if the fieldset is disabled. Due to implementation difficulty, we
    // don't honor that edge case; we style them as disabled anyway.
    &:disabled,
    &:read-only {
      background-color: $input-disabled-bg;
      border-color: $input-disabled-border-color;
      // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
      opacity: 1;
    }
  
    // File input buttons theming
    &::file-selector-button {
      padding: $input-padding-y $input-padding-x;
      margin: (-$input-padding-y) (-$input-padding-x);
      margin-inline-end: $input-padding-x;
      color: $form-file-button-color;
      @include gradient-bg($form-file-button-bg);
      pointer-events: none;
      border-color: inherit;
      border-style: solid;
      border-width: 0;
      border-inline-end-width: $input-border-width;
      border-radius: 0; // stylelint-disable-line property-disallowed-list
      @include transition($btn-transition);
    }
  
    &:hover:not(:disabled):not(:read-only)::file-selector-button {
      background-color: $form-file-button-hover-bg;
    }
  
    &::-webkit-file-upload-button {
      padding: $input-padding-y $input-padding-x;
      margin: (-$input-padding-y) (-$input-padding-x);
      margin-inline-end: $input-padding-x;
      color: $form-file-button-color;
      @include gradient-bg($form-file-button-bg);
      pointer-events: none;
      border-color: inherit;
      border-style: solid;
      border-width: 0;
      border-inline-end-width: $input-border-width;
      border-radius: 0; // stylelint-disable-line property-disallowed-list
      @include transition($btn-transition);
    }
  
    &:hover:not(:disabled):not(:read-only)::-webkit-file-upload-button {
      background-color: $form-file-button-hover-bg;
    }
  }
  